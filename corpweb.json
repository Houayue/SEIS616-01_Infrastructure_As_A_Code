{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Parameters": {
		"InstanceType": {
			"Description": "EC2 instance type",
			"Type": "String",
			"AllowedValues": [
				"t2.micro",
				"t2.small"
			],
			"Default": "t2.micro"
		},
		"KeyPair": {
			"Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
			"Type": "AWS::EC2::KeyPair::KeyName"
		},
		"YourIp": {
			"Description": "Your IP address in CIDR notation",
			"Type": "String"
		}
	},
	"Resources": {
		"EngineeringVpc": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"CidrBlock": "10.0.0.0/18",
				"Tags": [
					{
						"Key": "Name",
						"Value": "EngineeringVpc"
					}
				]
			}
		},
		"PublicSubnet1": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "EngineeringVpc"
				},
                "AvailabilityZone": {
					"Fn::Select": [
						"0",
						{
							"Fn::GetAZs": {
								"Ref": "AWS::Region"
							}
						}
					]
				},
                "MapPublicIpOnLaunch": true,
				"CidrBlock": "10.0.0.0/24",
				"Tags": [
					{
						"Key": "Name",
						"Value": "PublicSubnet1"
					}
				]
			}
		},
		"PublicSubnet2": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "EngineeringVpc"
				},
                "AvailabilityZone": {
					"Fn::Select": [
						"1",
						{
							"Fn::GetAZs": {
								"Ref": "AWS::Region"
							}
						}
					]
				},
                "MapPublicIpOnLaunch": true,
				"CidrBlock": "10.0.1.0/24",
				"Tags": [
					{
						"Key": "Name",
						"Value": "PublicSubnet2"
					}
				]
			}
		},
		"InternetGateway": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {
				"Tags": [
					{
						"Key": "Name",
						"Value": "EngineeringIGW"
					}
				]
			}
		},
		"AttachGateway": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"Properties": {
				"VpcId": {
					"Ref": "EngineeringVpc"
				},
				"InternetGatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},
		"WebserversSG": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"VpcId": {
					"Ref": "EngineeringVpc"
				},
				"GroupDescription": "Enable SSH and HTTP access",
				"SecurityGroupIngress": [
					{
						"IpProtocol": "tcp",
						"FromPort": 22,
						"ToPort": 22,
						"CidrIp": {
							"Ref": "YourIp"
						}
					},
					{
						"IpProtocol": "tcp",
						"FromPort": 80,
						"ToPort": 80,
						"CidrIp": "0.0.0.0/0"
					}
				],
				"Tags": [
					{
						"Key": "Name",
						"Value": "WebserversSG"
					}
				]
			}
		},
		"Web1": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"InstanceType": {
					"Ref": "InstanceType"
				},
				"KeyName": {
					"Ref": "KeyPair"
				},
				"SubnetId": {
					"Ref": "PublicSubnet1"
				},
				"ImageId": "ami-000089c8d02060104",
				"SecurityGroupIds": [
					{
						"Ref": "WebserversSG"
					}
				],
				"Tags": [
					{
						"Key": "Name",
						"Value": "web1"
					}
				],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"",
							[
								"#!/bin/bash\n",
								"yum update -y\n",
								"yum install -y git httpd php\n",
								"service httpd start\n",
								"chkconfig httpd on\n",
								"aws s3 cp s3://seis665-public/index.php /var/www/html/\n"
							]
						]
					}
				}
			}
		},
		"Web2": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"InstanceType": {
					"Ref": "InstanceType"
				},
				"KeyName": {
					"Ref": "KeyPair"
				},
				"SubnetId": {
					"Ref": "PublicSubnet2"
				},
				"ImageId": "ami-000089c8d02060104",
				"SecurityGroupIds": [
					{
						"Ref": "WebserversSG"
					}
				],
				"Tags": [
					{
						"Key": "Name",
						"Value": "web2"
					}
				],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"",
							[
								"#!/bin/bash\n",
								"yum update -y\n",
								"yum install -y git httpd php\n",
								"service httpd start\n",
								"chkconfig httpd on\n",
								"aws s3 cp s3://seis665-public/index.php /var/www/html/\n"
							]
						]
					}
				}
			}
		},
		"EngineeringLB": {
			"Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
			"Properties": {
				"Subnets": [
					{
						"Ref": "PublicSubnet1"
					},
					{
						"Ref": "PublicSubnet2"
					}
				],
				"SecurityGroups": [
					{
						"Ref": "WebserversSG"
					}
				],
				"Scheme": "internet-facing",
				"LoadBalancerAttributes": [
					{
						"Key": "deletion_protection.enabled",
						"Value": "false"
					}
				],
				"Tags": [
					{
						"Key": "Name",
						"Value": "EngineeringLB"
					}
				]
			}
		},
		"EngineeringWebservers": {
			"Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
			"Properties": {
				"VpcId": {
					"Ref": "EngineeringVpc"
				},
				"Port": 80,
				"Protocol": "HTTP",
				"TargetType": "instance",
				"HealthCheckProtocol": "HTTP",
				"HealthCheckPort": "80",
				"HealthCheckPath": "/",
				"Matcher": {
					"HttpCode": "200"
				},
				"Targets": [
					{
						"Id": {
							"Ref": "Web1"
						}
					},
					{
						"Id": {
							"Ref": "Web2"
						}
					}
				],
				"Tags": [
					{
						"Key": "Name",
						"Value": "EngineeringWebservers"
					}
				]
			}
		},
		"Listener": {
			"Type": "AWS::ElasticLoadBalancingV2::Listener",
			"Properties": {
				"LoadBalancerArn": {
					"Ref": "EngineeringLB"
				},
				"Port": 80,
				"Protocol": "HTTP",
				"DefaultActions": [
					{
						"Type": "forward",
						"TargetGroupArn": {
							"Ref": "EngineeringWebservers"
						}
					}
				]
			}
		}
	},
	"Outputs": {
		"WebUrl": {
			"Description": "The URL of the load balancer",
			"Value": {
				"Fn::GetAtt": [
					"EngineeringLB",
					"DNSName"
				]
			}
		}
	}
}
